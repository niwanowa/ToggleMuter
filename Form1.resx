<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>